/*
 * Mailer service API
 * Mailer service for microservices architecture for sending emails.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: andrzej.przybysz01@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.lazydev.stksongbook.mailer.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.lazydev.stksongbook.mailer.client.model.EmailAttachments;
import com.lazydev.stksongbook.mailer.client.model.EmailDsn;
import com.lazydev.stksongbook.mailer.client.model.EmailEnvelope;
import com.lazydev.stksongbook.mailer.client.model.EmailIcalEvent;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * Email that will be sent
 */
@ApiModel(description = "Email that will be sent")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-08-25T00:05:28.841+02:00")
public class Email {
  @JsonProperty("from")
  private String from = null;

  @JsonProperty("to")
  private String to = null;

  @JsonProperty("subject")
  private String subject = null;

  @JsonProperty("text")
  private String text = null;

  @JsonProperty("html")
  private String html = null;

  @JsonProperty("cc")
  private String cc = null;

  @JsonProperty("bcc")
  private String bcc = null;

  @JsonProperty("replyTo")
  private String replyTo = null;

  /**
   * Gets or Sets priority
   */
  public enum PriorityEnum {
    HIGH("high"),
    
    NORMAL("normal"),
    
    LOW("low");

    private String value;

    PriorityEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PriorityEnum fromValue(String text) {
      for (PriorityEnum b : PriorityEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("priority")
  private PriorityEnum priority = null;

  @JsonProperty("date")
  private BigDecimal date = null;

  @JsonProperty("attachments")
  private List<EmailAttachments> attachments = null;

  @JsonProperty("envelope")
  private EmailEnvelope envelope = null;

  @JsonProperty("dsn")
  private EmailDsn dsn = null;

  @JsonProperty("icalEvent")
  private EmailIcalEvent icalEvent = null;

  public Email from(String from) {
    this.from = from;
    return this;
  }

   /**
   * Get from
   * @return from
  **/
  @ApiModelProperty(required = true, value = "")
  public String getFrom() {
    return from;
  }

  public void setFrom(String from) {
    this.from = from;
  }

  public Email to(String to) {
    this.to = to;
    return this;
  }

   /**
   * Get to
   * @return to
  **/
  @ApiModelProperty(required = true, value = "")
  public String getTo() {
    return to;
  }

  public void setTo(String to) {
    this.to = to;
  }

  public Email subject(String subject) {
    this.subject = subject;
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @ApiModelProperty(required = true, value = "")
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }

  public Email text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @ApiModelProperty(value = "")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public Email html(String html) {
    this.html = html;
    return this;
  }

   /**
   * Get html
   * @return html
  **/
  @ApiModelProperty(value = "")
  public String getHtml() {
    return html;
  }

  public void setHtml(String html) {
    this.html = html;
  }

  public Email cc(String cc) {
    this.cc = cc;
    return this;
  }

   /**
   * Get cc
   * @return cc
  **/
  @ApiModelProperty(value = "")
  public String getCc() {
    return cc;
  }

  public void setCc(String cc) {
    this.cc = cc;
  }

  public Email bcc(String bcc) {
    this.bcc = bcc;
    return this;
  }

   /**
   * Get bcc
   * @return bcc
  **/
  @ApiModelProperty(value = "")
  public String getBcc() {
    return bcc;
  }

  public void setBcc(String bcc) {
    this.bcc = bcc;
  }

  public Email replyTo(String replyTo) {
    this.replyTo = replyTo;
    return this;
  }

   /**
   * Get replyTo
   * @return replyTo
  **/
  @ApiModelProperty(value = "")
  public String getReplyTo() {
    return replyTo;
  }

  public void setReplyTo(String replyTo) {
    this.replyTo = replyTo;
  }

  public Email priority(PriorityEnum priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @ApiModelProperty(value = "")
  public PriorityEnum getPriority() {
    return priority;
  }

  public void setPriority(PriorityEnum priority) {
    this.priority = priority;
  }

  public Email date(BigDecimal date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @ApiModelProperty(value = "")
  public BigDecimal getDate() {
    return date;
  }

  public void setDate(BigDecimal date) {
    this.date = date;
  }

  public Email attachments(List<EmailAttachments> attachments) {
    this.attachments = attachments;
    return this;
  }

  public Email addAttachmentsItem(EmailAttachments attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<EmailAttachments>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Get attachments
   * @return attachments
  **/
  @ApiModelProperty(value = "")
  public List<EmailAttachments> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<EmailAttachments> attachments) {
    this.attachments = attachments;
  }

  public Email envelope(EmailEnvelope envelope) {
    this.envelope = envelope;
    return this;
  }

   /**
   * Get envelope
   * @return envelope
  **/
  @ApiModelProperty(value = "")
  public EmailEnvelope getEnvelope() {
    return envelope;
  }

  public void setEnvelope(EmailEnvelope envelope) {
    this.envelope = envelope;
  }

  public Email dsn(EmailDsn dsn) {
    this.dsn = dsn;
    return this;
  }

   /**
   * Get dsn
   * @return dsn
  **/
  @ApiModelProperty(value = "")
  public EmailDsn getDsn() {
    return dsn;
  }

  public void setDsn(EmailDsn dsn) {
    this.dsn = dsn;
  }

  public Email icalEvent(EmailIcalEvent icalEvent) {
    this.icalEvent = icalEvent;
    return this;
  }

   /**
   * Get icalEvent
   * @return icalEvent
  **/
  @ApiModelProperty(value = "")
  public EmailIcalEvent getIcalEvent() {
    return icalEvent;
  }

  public void setIcalEvent(EmailIcalEvent icalEvent) {
    this.icalEvent = icalEvent;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Email email = (Email) o;
    return Objects.equals(this.from, email.from) &&
        Objects.equals(this.to, email.to) &&
        Objects.equals(this.subject, email.subject) &&
        Objects.equals(this.text, email.text) &&
        Objects.equals(this.html, email.html) &&
        Objects.equals(this.cc, email.cc) &&
        Objects.equals(this.bcc, email.bcc) &&
        Objects.equals(this.replyTo, email.replyTo) &&
        Objects.equals(this.priority, email.priority) &&
        Objects.equals(this.date, email.date) &&
        Objects.equals(this.attachments, email.attachments) &&
        Objects.equals(this.envelope, email.envelope) &&
        Objects.equals(this.dsn, email.dsn) &&
        Objects.equals(this.icalEvent, email.icalEvent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(from, to, subject, text, html, cc, bcc, replyTo, priority, date, attachments, envelope, dsn, icalEvent);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Email {\n");
    
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    html: ").append(toIndentedString(html)).append("\n");
    sb.append("    cc: ").append(toIndentedString(cc)).append("\n");
    sb.append("    bcc: ").append(toIndentedString(bcc)).append("\n");
    sb.append("    replyTo: ").append(toIndentedString(replyTo)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    envelope: ").append(toIndentedString(envelope)).append("\n");
    sb.append("    dsn: ").append(toIndentedString(dsn)).append("\n");
    sb.append("    icalEvent: ").append(toIndentedString(icalEvent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

